import http from "http";
import app from "../app.js";
import debugLib from "debug";

const debug = debugLib("backend:server");

const port = normalizePort(process.env.PORT || "5000");
app.set("port", port);

const server = http.createServer(app);

const host = "127.0.0.1";

server.listen(port, host, () => {
  console.log(`ðŸš€  Server listening at http://${host}:${port}`);
});

server.on("error", onError);
server.on("listening", onListening);

function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

function onError(error) {
  if (error.syscall !== "listen") throw error;
  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;
  switch (error.code) {
    case "EACCES":
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === "string" ? addr : `${addr.address}:${addr.port}`;
  console.log(`âœ… HTTP server bound on ${bind}`);
  debug(`Listening on ${bind}`);
}
