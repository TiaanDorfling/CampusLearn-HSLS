################################################################################
# üåê BACKEND API TEST SUITE ‚Äî CampusLearn (Free Model)
# Use this file with VSCode REST Client or similar REST tester.
# Make sure backend is running on http://localhost:5000 before testing.
################################################################################

############################################
### 1Ô∏è‚É£ HEALTH CHECKS
############################################

### ‚úÖ Basic server health
GET http://localhost:5000/health

### ‚úÖ Environment key validation (checks loaded env vars)
GET http://localhost:5000/health/env-keys


############################################
### 2Ô∏è‚É£ AUTHENTICATION & USER MANAGEMENT
############################################

### üßç‚Äç‚ôÇÔ∏è Register a new STUDENT account
POST http://localhost:5000/api/auth/register
Content-Type: application/json

{
  "name": "Test Student",
  "email": "student1@student.belgiumcampus.ac.za",
  "password": "StrongPass123!",
  "role": "student"
}

### üßë‚Äçüè´ Register a new TUTOR account
POST http://localhost:5000/api/auth/register
Content-Type: application/json

{
  "name": "Tutor Example",
  "email": "tutor1@student.belgiumcampus.ac.za",
  "password": "StrongPass123!",
  "role": "tutor"
}

### üëë Register a new ADMIN account
POST http://localhost:5000/api/auth/register
Content-Type: application/json

{
  "name": "Admin Example",
  "email": "admin1@student.belgiumcampus.ac.za",
  "password": "StrongPass123!",
  "role": "admin"
}

### üîë Login (replace with the email you registered above)
POST http://localhost:5000/api/auth/login
Content-Type: application/json

{
  "email": "student1@student.belgiumcampus.ac.za",
  "password": "StrongPass123!"
}

### üîí Check current session (requires jwt cookie from login)
GET http://localhost:5000/api/auth/session
Cookie: jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2NmNjU4ZDY1Mjg3OGQ5Mjg4NjkiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NjA1MjU2MDQsImV4cCI6MTc2MDUyOTIwNH0.UoDugs6DMz24DmY1ILxfQml9KecgYa0zpFDmknytQKo

### üö™ Logout (clears the cookie)
POST http://localhost:5000/api/auth/logout


############################################
### 3Ô∏è‚É£ USER MANAGEMENT (requires ADMIN login)
############################################

### üß© Admin creates a new user manually
POST http://localhost:5000/api/user/create-user
Content-Type: application/json
Cookie: jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2NmNjU4ZDY1Mjg3OGQ5Mjg4NjkiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NjA1MjU2MDQsImV4cCI6MTc2MDUyOTIwNH0.UoDugs6DMz24DmY1ILxfQml9KecgYa0zpFDmknytQKo

{
  "name": "Created By Admin",
  "email": "createdbyadmin@student.belgiumcampus.ac.za",
  "password": "AdminMade123!",
  "role": "student"
}

### ‚úèÔ∏è Admin updates a user's profile
PUT http://localhost:5000/api/user/update/68ef7b760ee0cffcd37dd324
Content-Type: application/json
Cookie: jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2NmNjU4ZDY1Mjg3OGQ5Mjg4NjkiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NjA1MjU2MDQsImV4cCI6MTc2MDUyOTIwNH0.UoDugs6DMz24DmY1ILxfQml9KecgYa0zpFDmknytQKo

{
  "name": "Updated Student Name",
  "email": "updatedstudent@student.belgiumcampus.ac.za"
}

### ‚ùå Admin deletes a user
DELETE http://localhost:5000/api/user/delete/68ef7b760ee0cffcd37dd324
Cookie: jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2NmNjU4ZDY1Mjg3OGQ5Mjg4NjkiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NjA1MjU2MDQsImV4cCI6MTc2MDUyOTIwNH0.UoDugs6DMz24DmY1ILxfQml9KecgYa0zpFDmknytQKo

### üß† User updates their own profile (self-service)
PUT http://localhost:5000/api/user/update-user
Content-Type: application/json
Cookie: jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2NmNjU4ZDY1Mjg3OGQ5Mjg4NjkiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NjA1MjU2MDQsImV4cCI6MTc2MDUyOTIwNH0.UoDugs6DMz24DmY1ILxfQml9KecgYa0zpFDmknytQKo

{
  "name": "Updated My Own Name"
}


############################################
### 4Ô∏è‚É£ TOPICS MODULE
############################################

### üìñ Get all topics (requires login)
GET http://localhost:5000/api/topics
Cookie: jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2ZkYjU4ZDY1Mjg3OGQ5Mjg4NzciLCJyb2xlIjoic3R1ZGVudCIsImlhdCI6MTc2MDUyNjM4NCwiZXhwIjoxNzYwNTI5OTg0fQ.Boq6M0lLKmuEc32SlBF2pDnuiQHXkPf_ADiuq7qQcFU

### ‚ûï Create a new topic (requires login)
POST http://localhost:5000/api/topics
Content-Type: application/json
Cookie: jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2ZkYjU4ZDY1Mjg3OGQ5Mjg4NzciLCJyb2xlIjoic3R1ZGVudCIsImlhdCI6MTc2MDUyNjM4NCwiZXhwIjoxNzYwNTI5OTg0fQ.Boq6M0lLKmuEc32SlBF2pDnuiQHXkPf_ADiuq7qQcFU

{
  "title": "Data Structures Assignment Help",
  "body": "Can someone explain linked list complexity analysis?",
  "moduleCode": "SEN381",
  "tags": ["linked-list", "complexity", "algorithms"]
}

### üîç Search topics by keyword
GET http://localhost:5000/api/topics?keyword=linkedeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2ZkYjU4ZDY1Mjg3OGQ5Mjg4NzciLCJyb2xlIjoic3R1ZGVudCIsImlhdCI6MTc2MDUyNjM4NCwiZXhwIjoxNzYwNTI5OTg0fQ.Boq6M0lLKmuEc32SlBF2pDnuiQHXkPf_ADiuq7qQcFUeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2NmNjU4ZDY1Mjg3OGQ5Mjg4NjkiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3NjA1MjU2MzksImV4cCI6MTc2MDUyOTIzOX0.LBZlOhq4OE-NU-MphPHJYlA26W6wvoBN3Dx_-h8QADw


############################################
### 5Ô∏è‚É£ QUESTIONS MODULE
############################################

### üìù Post a new question (Student only)
POST http://localhost:5000/api/questions
Content-Type: application/json
Cookie: jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2ZkYjU4ZDY1Mjg3OGQ5Mjg4NzciLCJyb2xlIjoic3R1ZGVudCIsImlhdCI6MTc2MDUyNjM4NCwiZXhwIjoxNzYwNTI5OTg0fQ.Boq6M0lLKmuEc32SlBF2pDnuiQHXkPf_ADiuq7qQcFU

{
  "title": "How to connect Mongoose to MongoDB Atlas?",
  "body": "I keep getting authentication failed errors even though I used the right URI.",
  "moduleCode": "SEN381"
}

### üìö Get all questions (feed)
GET http://localhost:5000/api/questions
Cookie: jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2OGVmN2ZkYjU4ZDY1Mjg3OGQ5Mjg4NzciLCJyb2xlIjoic3R1ZGVudCIsImlhdCI6MTc2MDUyNjM4NCwiZXhwIjoxNzYwNTI5OTg0fQ.Boq6M0lLKmuEc32SlBF2pDnuiQHXkPf_ADiuq7qQcFU


############################################
### 6Ô∏è‚É£ STUDENT FACTORY TEST (Temporary)
############################################

### üß™ Quick student creation test (does NOT persist to DB)
GET http://localhost:5000/students/get-student


############################################
### 7Ô∏è‚É£ AI CHAT (Gemini Free Model)
############################################

### ü§ñ Ask the AI Tutor a question
POST http://localhost:5000/api/ai/chat
Content-Type: application/json

{
  "message": "Explain the difference between synchronous and asynchronous code in JavaScript."
}
